# ------------- LibreChat core -------------
version: 1.2.1
cache: true                # set false to disable server-side caching

# ------------- Upload limits --------------
fileConfig:
  serverFileSizeLimit: 900       # MB – hard ceiling for any single upload
  avatarSizeLimit:      2        # MB – user-avatar images
  endpoints:
    default:
      totalSizeLimit:    900      # MB – per request

# ------------- Interface tweaks -----------
interface:
  customWelcome: "Welcome to LibreChat! Enjoy your experience."
  endpointsMenu: true
  modelSelect:   true
  parameters:    true
  sidePanel:     true
  presets:       true
  prompts:       true
  bookmarks:     true
  multiConvo:    true
  agents:        true

  # — Privacy / Terms links (edit whenever you want) —
  privacyPolicy:
    externalUrl: 'https://librechat.ai/privacy-policy'
    openNewTab:  true
  termsOfService:
    externalUrl: 'https://librechat.ai/tos'
    openNewTab:  true
    modalAcceptance: false   # flip to true if you want the pop-up

# ------------- User registration ----------
registration:
  socialLogins: ['github','google','discord','facebook','apple','openid']
  # allowedDomains:             # uncomment to lock sign-ups to work e-mails
  #   - "your-company.com"

# ------------- In-chat Web Actions --------
actions:
  allowedDomains: ['google.com','swapi.dev','librechat.ai']
  # Add more domains as you start using the browser / actions feature.

# ============  ENDPOINTS  =================
endpoints:

  # --- Native OpenAI endpoint -------------
  # No API key needed here – LibreChat will read OPENAI_API_KEY and
  # (optionally) OPENAI_BASE_URL from your Railway variables.
  openAI:
    fetch: true                  # pull latest model catalogue automatically
    # You can override defaults (model lists, params…) later if you want.

  # --- Custom endpoints list -------------
  custom:

    # ----------  OpenRouter  ---------------
    - name: 'OpenRouter'
      apiKey:  '${OPENROUTER_API_KEY}'      # create this var in Railway
      baseURL: 'https://openrouter.ai/api/v1'
      headers:                              # REQUIRED by OpenRouter
        HTTP-Referer: 'https://micah.chat'  # your public URL
        X-Title:      'MicahChat'
      models:
        default: ['meta-llama/llama-3-70b-instruct']  # initial drop-down
        fetch:    true                                # pull full list
      titleConvo:       true
      titleModel:       'meta-llama/llama-3-70b-instruct'
      dropParams:       ['stop']           # recommended by OR docs
modelDisplayLabel: 'OpenRouter'       # what users will see
# ----------  (Paste additional endpoints below as needed)  ----------
